There are 3 ways to use this config builder.

1) Regular Build, for this way you create a yml file for your configuration following the examples im the templates directory.  In the CLI 
   you only have to supply the yml file name.

2) Variable Build / Type File Build, for this way you create your yml file, but you also create a CSV with variables to fill out your variable 
   in your yml file.  This uses the standard Jinja2 variable format, see bellow. In the CLI you supply the name of the yml file, and the -t option
   and supply the variable CSV file name.
   
3) Auto Build, for this way you create a CSV that points to a "variableized" yml file.  This allows you to create one yml file that you can use
   over and over for a standard config.  This uses the standard Jinja2 variable format, see bellow.  In the CLI you use the -a and -t option and 
   supply the variable CSV file name.
   
The main differences between option 2, and 3 is that with option 3 the CSV file supplies the template file name.  Please reference the examples.

There are 2 Versions of yml file, Version 2 should be they way to use it from now on, but your Version 1 files will still work.  Please reference the examples.
   
   
Reference Documents:

YAML Format: http://yaml.org/
Template Language: http://jinja.pocoo.org
Example Files: ./Examples

In Version 1.0.9 using version 2 yaml you can add vars in the yaml like so

version: 2
vars:
    test1: something

Any variables listed overrides any variable if you use a "Variable Build, or Auto Build"

In Version 1.0.11

Custom Filters for Templates:

u_ip_address = Check for a good unicast ipv4 address
m_ip_address = Check for a good multicast ipv4 address
subnet = Checks for any ipv4 subnet in the following format x.x.x.x/x
mask_cidr = Check for a good ipv4 CIDR mask
mask_standard = Check for a good standard ipv4 mask
mask_inv = Check for a good inverse ipv4 mask
as_number = Check for a BGP, EIGRP, OSPF process/AS number 1 to 65535
vlan = Check for a VLAN number 1 - 4096
vni = Check for a VNI number 1 - 16777214
required = Check for a required item in a template
community = Check for a community in the following format XXXX:XXXX
mac = Check for a good mac address
p_or_d = Check for the word permit, or deny
number = Check for any number
rmap_match_items = Check for these route-map match items ('ip address prefix-list', 'as-path', 'ip address', 'community', 'extcommunity', 'ip multicast group')
rmap_set_items = Check for these route-map set items ('local-preference', 'weight', 'community', 'as-path prepend', 'as-path prepend last-as')
protocol_port = Check for a number between 0 and 65535
i_or_o = Check for the word inside, or outside